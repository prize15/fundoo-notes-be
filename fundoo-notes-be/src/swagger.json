{
  "openapi": "3.0.0",
  "info": {
    "title": "Fundoo Notes API",
    "version": "1.0.0",
    "description": "API documentation for Fundoo Notes project"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["firstName", "lastName", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "User already exists" }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get all notes",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Create a new note",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Note created successfully" },
          "400": { "description": "Error creating note" }
        }
      }
    },
    "/notes/{id}": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get a note by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Note data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": { "description": "Note not found" }
        }
      },
      "put": {
        "tags": ["Notes"],
        "summary": "Update a note by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Note updated successfully" },
          "404": { "description": "Note not found" }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Delete a note by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Note deleted successfully" },
          "404": { "description": "Note not found" }
        }
      }
    },
    "/notes/{id}/archive": {
      "patch": {
        "tags": ["Notes"],
        "summary": "Archive a note by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Note archived successfully" },
          "404": { "description": "Note not found" }
        }
      }
    },
    "/notes/{id}/trash": {
      "patch": {
        "tags": ["Notes"],
        "summary": "Trash a note by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Note trashed successfully" },
          "404": { "description": "Note not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Note": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "isArchived": { "type": "boolean", "default": false },
          "isTrashed": { "type": "boolean", "default": false }
        },
        "required": ["title", "content"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
